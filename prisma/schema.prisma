datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}

enum Role {
  user
  admin
}
 
model User {
  id            String          @id @default(cuid())
  name          String?
  lastname      String?
  email         String          @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  role          Role            @default(user)
  is_active     Boolean         @default(true)
  tasks         Task[]
  planId        String?
  plan          Plans?          @relation(fields: [planId], references: [planId])
  
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}


model VerificationToken {
  identifier String @unique
  token      String
  expires    DateTime
 
  @@id([identifier])
}


model Plans {
  planId String @id @default(cuid())
  name String
  price Int
  currency String
  description String
  maxTasks Int
  users User[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Task {
  taskId    String @id @default(cuid())
  name      String
  description String

  userId      String
  user        User    @relation(fields: [userId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}